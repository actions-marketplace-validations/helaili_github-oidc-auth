name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:      
      matrix:        
        node-version: [18.x]
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: install
        run: npm install
      - name: build & package
        run: npm run all
      - name: Push
        run: |
          COMMIT_OPTIONS="--allow-empty"
          git config --global user.name "${{ env.GITHUB_ACTOR }}"
          git config --global user.email "${{ env.GITHUB_ACTOR }}@users.noreply.github.com"
          git add . 
          git commit $COMMIT_OPTIONS -m "[no ci] actions packaging"
          git push origin ${{ env.GITHUB_REF_NAME }}

  test:
    name: Build and test
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
            
      - name: GetToken
        id: getToken
        uses: ./
        with:
          login: ${{ vars.LOGIN }}
          endpoint: ${{ vars.ENDPOINT }}
      
      - name: Use the token from the env
        uses: actions/github-script@v6
        with:
          github-token: ${{ env.SCOPED_TOKEN }}
          script: |
            github.rest.repos.get({
              owner: 'octodemo',
              repo: 'codespace-oddity'
            }).then((response) => {
              if(!response.data.full_name) {
                core.setFailed(`Failed to access repo octodemo/codespace-oddity. Response was ${response}`);
              } else {
                console.log('Successfully accessed repo octodemo/codespace-oddity');
              }
            }).catch((error) => {
              core.setFailed(`Failed to access repo. Error was ${error}`);
            })
      
      - name: Use the token from the output
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.getToken.outputs.scopedToken }}
          script: |
            github.rest.repos.get({
              owner: 'octodemo',
              repo: 'codespace-oddity'
            }).then((response) => {
              if(!response.data.full_name) {
                core.setFailed(`Failed to access repo octodemo/codespace-oddity. Response was ${response}`);
              } else {
                console.log('Successfully accessed repo octodemo/codespace-oddity');
              }
            }).catch((error) => {
              core.setFailed(`Failed to access repo. Error was ${error}`);
            })